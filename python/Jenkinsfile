#!/usr/bin/env groovy

plaid_image = "plaidcloud/faas"

podTemplate(label: 'io',
  containers: [
    containerTemplate(name: 'docker', image: 'docker:17.06.2-ce-git', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'kubectl', image: "lachlanevenson/k8s-kubectl:v1.11.1", ttyEnabled: true, command: 'cat')
  ],
  serviceAccount: 'jenkins'
)
{
  node(label: 'io') {
    withCredentials([string(credentialsId: 'offsite-host', variable: 'host')]) {
      container('docker') {
        docker.withServer("$host", 'remote-docker-credentials') {
          docker.withRegistry('', 'gbates101') {
            // Checkout source before doing anything else
            scm_map = checkout scm
            dir("python") {
              stage('Run Linter') {
                docker.build("${plaid_image}:lint", "--pull --target=lint .").withRun('-t') {c ->
                  sh "docker logs ${c.id}>pylint.log"
                }
                recordIssues tool: pyLint(pattern: 'pylint.log'), qualityGates: [[threshold: 1, type: 'TOTAL_HIGH', unstable: true]]
              }

              stage('Run Unit Tests') {
                // TODO: Actually run unit tests. This will probably require another container template for workflow-test.
                image = docker.build("${plaid_image}:workflow-test", "--pull -f tests/fixtures/openfaas-functions/test/Dockerfile tests/fixtures/openfaas-functions/test")
              }
            }

            // No need to publish dev branches, we can change this later.
            if (scm_map.GIT_BRANCH == 'master') {
              // TODO: We need to tag this revision with a version number.
              stage('Trigger Downstream Job') {
                build job: 'plaid/master', wait: false, parameters: [[$class: 'BooleanParameterValue', name: 'no_cache', value: true]]
              }
            }
          }
        }
      }
    }
  }
}
